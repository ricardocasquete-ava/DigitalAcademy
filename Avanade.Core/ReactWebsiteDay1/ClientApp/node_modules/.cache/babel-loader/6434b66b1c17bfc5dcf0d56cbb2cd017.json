{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ricardo.casquete\\\\source\\\\repos\\\\DigitalAcademy2\\\\Avanade.Core\\\\ReactWebsiteDay1\\\\ClientApp\\\\src\\\\components\\\\Samples\\\\PropsSample.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState } from 'react';\nimport { Button } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PropsSample = () => {\n  _s();\n\n  const [tileCount, setTileCount] = useState(1);\n  const [tiles, setTiles] = useState(['a', 'b']);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Number of Tiles is \", tileCount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        color: \"success\",\n        onClick: () => setTileCount(tileCount + 1),\n        children: \"Add Tiles\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), tiles.map((item, index) => /*#__PURE__*/_jsxDEV(Tile, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 43\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PropsSample, \"PhDfcuGdwXhp7zSNXk1PQODXkkY=\");\n\n_c = PropsSample;\nexport default PropsSample;\n\nconst Tile = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Tile\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = Tile;\n\nconst Library = () => {\n  const books = [{\n    name: 'Pride and Prejudice',\n    author: 'Jane Austen',\n    id: 1\n  }, {\n    name: 'The Great Gatsby',\n    author: ' F. Scott Fitzgerald',\n    id: 2\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: books.map(book => /*#__PURE__*/_jsxDEV(Booksdata, {\n      name: book.name,\n      author: book.author\n    }, book.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n\n_c3 = Library;\n\nconst Booksdata = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Book name: \", props.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"genre: \", props.genre]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Author name: \", props.author]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Year published : \", props.year_published]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n};\n\n_c4 = Booksdata;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"PropsSample\");\n$RefreshReg$(_c2, \"Tile\");\n$RefreshReg$(_c3, \"Library\");\n$RefreshReg$(_c4, \"Booksdata\");","map":{"version":3,"sources":["C:/Users/ricardo.casquete/source/repos/DigitalAcademy2/Avanade.Core/ReactWebsiteDay1/ClientApp/src/components/Samples/PropsSample.js"],"names":["React","Fragment","useState","Button","PropsSample","tileCount","setTileCount","tiles","setTiles","map","item","index","Tile","props","Library","books","name","author","id","book","Booksdata","genre","year_published"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,SAASC,MAAT,QAAuB,YAAvB;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AAEtB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BJ,QAAQ,CAAC,CAAD,CAA1C;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,CAAC,GAAD,EAAK,GAAL,CAAD,CAAlC;AAEA,sBACI,QAAC,QAAD;AAAA,4BAEI;AAAA,wCACwBG,SADxB;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAMI;AAAA,6BACI,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,SAAd;AAAwB,QAAA,OAAO,EAAE,MAAMC,YAAY,CAACD,SAAS,GAAG,CAAb,CAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YANJ,EAYKE,KAAK,CAACE,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,kBAAmB,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,YAA7B,CAZL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH,CAtBD;;GAAMP,W;;KAAAA,W;AAuBN,eAAeA,WAAf;;AAEA,MAAMQ,IAAI,GAAIC,KAAD,IAAW;AAEpB,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAPD;;MAAMD,I;;AAaN,MAAME,OAAO,GAAG,MAAM;AAElB,QAAMC,KAAK,GAAG,CACV;AACIC,IAAAA,IAAI,EAAE,qBADV;AAEIC,IAAAA,MAAM,EAAE,aAFZ;AAGIC,IAAAA,EAAE,EAAE;AAHR,GADU,EAMV;AACIF,IAAAA,IAAI,EAAE,kBADV;AAEIC,IAAAA,MAAM,EAAE,sBAFZ;AAGIC,IAAAA,EAAE,EAAE;AAHR,GANU,CAAd;AAaA,sBAEI;AAAA,cACKH,KAAK,CAACN,GAAN,CAAWU,IAAD,iBACP,QAAC,SAAD;AAEI,MAAA,IAAI,EAAEA,IAAI,CAACH,IAFf;AAGI,MAAA,MAAM,EAAEG,IAAI,CAACF;AAHjB,OACSE,IAAI,CAACD,EADd;AAAA;AAAA;AAAA;AAAA,YADH;AADL;AAAA;AAAA;AAAA;AAAA,UAFJ;AAYH,CA3BD;;MAAMJ,O;;AA6BN,MAAMM,SAAS,GAAIP,KAAD,IAAW;AAEzB,sBACI;AAAA,4BACI;AAAA,gCAAgBA,KAAK,CAACG,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,4BAAWH,KAAK,CAACQ,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA,kCAAiBR,KAAK,CAACI,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAA,sCAAqBJ,KAAK,CAACS,cAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CAVD;;MAAMF,S","sourcesContent":["import React, { Fragment, useState } from 'react';\r\nimport { Button } from 'reactstrap';\r\n\r\nconst PropsSample = () => {\r\n\r\n    const [tileCount, setTileCount] = useState(1);\r\n    const [tiles, setTiles] = useState(['a','b']);\r\n\r\n    return (\r\n        <Fragment>\r\n\r\n            <div>\r\n                Number of Tiles is {tileCount}\r\n            </div>\r\n\r\n            <div>\r\n                <Button color=\"success\" onClick={() => setTileCount(tileCount + 1)}>\r\n                    Add Tiles\r\n                </Button>\r\n            </div>\r\n\r\n            {tiles.map((item, index) => ( <Tile /> )) }\r\n\r\n        </Fragment>\r\n    );\r\n};\r\nexport default PropsSample;\r\n\r\nconst Tile = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            Tile\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n\r\n\r\n\r\nconst Library = () => {\r\n\r\n    const books = [\r\n        {\r\n            name: 'Pride and Prejudice',\r\n            author: 'Jane Austen',\r\n            id: 1\r\n        },\r\n        {\r\n            name: 'The Great Gatsby',\r\n            author: ' F. Scott Fitzgerald',\r\n            id: 2\r\n        },\r\n    ];\r\n\r\n    return (\r\n\r\n        <div>\r\n            {books.map((book) =>\r\n                <Booksdata\r\n                    key={book.id}\r\n                    name={book.name}\r\n                    author={book.author}\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst Booksdata = (props) => {\r\n\r\n    return (\r\n        <div >\r\n            <h3>Book name: {props.name}</h3>\r\n            <p>genre: {props.genre}</p>\r\n            <p>Author name: {props.author}</p>\r\n            <p>Year published : {props.year_published}</p>\r\n        </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}